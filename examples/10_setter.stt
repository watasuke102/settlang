fn main() -> i32 {
  # this variable does not have a setter, so it is immutable
  let immutable: i32 = 10
  
  # this variable has 'double()' as a setter
  let x: i32 | double = 10 # x is 10; initialization and assignment are different
  
  # call setter by <mutable varname>.set(<args>)
  x.set(x) # `x` will become 20

  # setter (no args)
  let one: i32 | set_one = 0
  one.set() # `one` will become 1
  
  # of course 'double()' can be used as a normal function
  ret immutable * (x+one) - double(100)
  # returns 10 * (20 + 1) - 100*2 == 204
}

fn double(in: i32) -> i32 {
  ret in*2
}
fn set_one() -> i32 {
  ret 1
}
